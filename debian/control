Source: uglify-js
Section: javascript
Priority: optional
Maintainer: Debian Javascript Maintainers <pkg-javascript-devel@lists.alioth.debian.org>
Uploaders:
 Marcelo Jorge Vieira (metal) <metal@debian.org>,
 Jonas Smedegaard <dr@jones.dk>,
Build-Depends:
 brotli,
 cmark-gfm <!nodoc>,
 debhelper-compat (= 13),
 help2man <!nodoc>,
 node-acorn,
 node-semver <!nocheck>,
 pigz,
Standards-Version: 4.6.1
Homepage: https://github.com/mishoo/UglifyJS
Vcs-Browser: https://salsa.debian.org/js-team/uglifyjs
Vcs-Git: https://salsa.debian.org/js-team/uglifyjs.git
Rules-Requires-Root: no

Package: node-uglify-js
Architecture: all
Depends:
 ${misc:Depends},
Conflicts:
 node-uglify,
Multi-Arch: foreign
Description: JavaScript parser, mangler/compressor and beautifier - Nodejs library
 UglifyJS is a JavaScript compressor/minifier written in JavaScript.
 It also contains tools that allow one to automate
 working with JavaScript code:
 .
  * A parser which produces an abstract syntax tree (AST)
    from JavaScript code.
  * A code generator which outputs JavaScript code from an AST,
    also providing the option to get a source map.
  * A compressor (optimizer) -
    it uses the transformer API to optimize an AST into a smaller one.
  * A mangler -
    reduce names of local variables to (usually) single-letters.
  * A scope analyzer, which is a tool that augments the AST
    with information about where variables are defined/referenced etc.
  * A tree walker -
    a simple API allowing you to do something on every node in the AST.
  * A tree transformer -
    another API intended to transform the tree.
 .
 All the above utilities and APIs are defined in ~6500 lines of code
 (except for the effective generation of the source-map,
 which is handled by the source-map module).
 Compared to alternatives, UglifyJS is pretty small.
 .
 This package provides UglifyJS library
 usable with Node.JS.

Package: uglifyjs
Architecture: all
Depends:
 node-uglify-js (= ${source:Version}),
 nodejs,
 ${misc:Depends},
Suggests:
 node-acorn,
Provides:
 uglifyjs,
Conflicts:
 node-uglify,
Description: JavaScript parser, mangler/compressor and beautifier - CLI tool
 UglifyJS is a JavaScript compressor/minifier written in JavaScript.
 It also contains tools that allow one to automate
 working with JavaScript code:
 .
  * A parser which produces an abstract syntax tree (AST)
    from JavaScript code.
  * A code generator which outputs JavaScript code from an AST,
    also providing the option to get a source map.
  * A compressor (optimizer) -
    it uses the transformer API to optimize an AST into a smaller one.
  * A mangler -
    reduce names of local variables to (usually) single-letters.
  * A scope analyzer, which is a tool that augments the AST
    with information about where variables are defined/referenced etc.
  * A tree walker -
    a simple API allowing you to do something on every node in the AST.
  * A tree transformer -
    another API intended to transform the tree.
 .
 All the above utilities and APIs are defined in ~6500 lines of code
 (except for the effective generation of the source-map,
 which is handled by the source-map module).
 Compared to alternatives, UglifyJS is pretty small.
 .
 This package provides the command-line tool uglifyjs.

Package: libjs-uglify-js
Architecture: all
Depends:
 ${misc:Depends},
Recommends:
 javascript-common,
Multi-Arch: foreign
Description: JavaScript parser, mangler/compressor and beautifier - browser library
 UglifyJS is a JavaScript compressor/minifier written in JavaScript.
 It also contains tools that allow one to automate
 working with JavaScript code:
 .
  * A parser which produces an abstract syntax tree (AST)
    from JavaScript code.
  * A code generator which outputs JavaScript code from an AST,
    also providing the option to get a source map.
  * A compressor (optimizer) -
    it uses the transformer API to optimize an AST into a smaller one.
  * A mangler -
    reduce names of local variables to (usually) single-letters.
  * A scope analyzer, which is a tool that augments the AST
    with information about where variables are defined/referenced etc.
  * A tree walker -
    a simple API allowing you to do something on every node in the AST.
  * A tree transformer -
    another API intended to transform the tree.
 .
 All the above utilities and APIs are defined in ~6500 lines of code
 (except for the effective generation of the source-map,
 which is handled by the source-map module).
 Compared to alternatives, UglifyJS is pretty small.
 .
 This package provides UglifyJS library
 directly usable in web browsers.
